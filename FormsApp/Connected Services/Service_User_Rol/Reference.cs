//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FormsApp.Service_User_Rol {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost:8733/WcfService/Service_User_Rol", ConfigurationName="Service_User_Rol.IGestion_User_Rol")]
    public interface IGestion_User_Rol {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/List_Forms_ro" +
            "l", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/List_Forms_ro" +
            "lResponse")]
        string List_Forms_rol();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/List_Forms_ro" +
            "l", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/List_Forms_ro" +
            "lResponse")]
        System.Threading.Tasks.Task<string> List_Forms_rolAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/List_User_rol" +
            "", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/List_User_rol" +
            "Response")]
        string List_User_rol();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/List_User_rol" +
            "", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/List_User_rol" +
            "Response")]
        System.Threading.Tasks.Task<string> List_User_rolAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/insert", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/insertRespons" +
            "e")]
        void insert(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/insert", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/insertRespons" +
            "e")]
        System.Threading.Tasks.Task insertAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/update", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/updateRespons" +
            "e")]
        void update(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/update", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/updateRespons" +
            "e")]
        System.Threading.Tasks.Task updateAsync(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/delete", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/deleteRespons" +
            "e")]
        void delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/delete", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/deleteRespons" +
            "e")]
        System.Threading.Tasks.Task deleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/insert_rol_us" +
            "er", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/insert_rol_us" +
            "erResponse")]
        void insert_rol_user(int rol, int user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/insert_rol_us" +
            "er", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/insert_rol_us" +
            "erResponse")]
        System.Threading.Tasks.Task insert_rol_userAsync(int rol, int user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/delete_rol_us" +
            "er", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/delete_rol_us" +
            "erResponse")]
        void delete_rol_user(int rol, int user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/delete_rol_us" +
            "er", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/delete_rol_us" +
            "erResponse")]
        System.Threading.Tasks.Task delete_rol_userAsync(int rol, int user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/get_id_rol", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/get_id_rolRes" +
            "ponse")]
        int get_id_rol(string rol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/get_id_rol", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/get_id_rolRes" +
            "ponse")]
        System.Threading.Tasks.Task<int> get_id_rolAsync(string rol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/insert_Forms_" +
            "rol", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/insert_Forms_" +
            "rolResponse")]
        void insert_Forms_rol(int rol, int form);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/insert_Forms_" +
            "rol", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/insert_Forms_" +
            "rolResponse")]
        System.Threading.Tasks.Task insert_Forms_rolAsync(int rol, int form);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/delete_Forms_" +
            "rol", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/delete_Forms_" +
            "rolResponse")]
        void delete_Forms_rol(int rol, int form);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/delete_Forms_" +
            "rol", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/delete_Forms_" +
            "rolResponse")]
        System.Threading.Tasks.Task delete_Forms_rolAsync(int rol, int form);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/get_id_form", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/get_id_formRe" +
            "sponse")]
        int get_id_form(string form);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/get_id_form", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/get_id_formRe" +
            "sponse")]
        System.Threading.Tasks.Task<int> get_id_formAsync(string form);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/Login", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/LoginResponse" +
            "")]
        string[][] Login(string user, string pasword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/Login", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/LoginResponse" +
            "")]
        System.Threading.Tasks.Task<string[][]> LoginAsync(string user, string pasword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/Forms_For_Use" +
            "r", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/Forms_For_Use" +
            "rResponse")]
        string Forms_For_User(int ID_Rol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/Forms_For_Use" +
            "r", ReplyAction="http://localhost:8733/WcfService/Service_User_Rol/IGestion_User_Rol/Forms_For_Use" +
            "rResponse")]
        System.Threading.Tasks.Task<string> Forms_For_UserAsync(int ID_Rol);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestion_User_RolChannel : FormsApp.Service_User_Rol.IGestion_User_Rol, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Gestion_User_RolClient : System.ServiceModel.ClientBase<FormsApp.Service_User_Rol.IGestion_User_Rol>, FormsApp.Service_User_Rol.IGestion_User_Rol {
        
        public Gestion_User_RolClient() {
        }
        
        public Gestion_User_RolClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Gestion_User_RolClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Gestion_User_RolClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Gestion_User_RolClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string List_Forms_rol() {
            return base.Channel.List_Forms_rol();
        }
        
        public System.Threading.Tasks.Task<string> List_Forms_rolAsync() {
            return base.Channel.List_Forms_rolAsync();
        }
        
        public string List_User_rol() {
            return base.Channel.List_User_rol();
        }
        
        public System.Threading.Tasks.Task<string> List_User_rolAsync() {
            return base.Channel.List_User_rolAsync();
        }
        
        public void insert(string name) {
            base.Channel.insert(name);
        }
        
        public System.Threading.Tasks.Task insertAsync(string name) {
            return base.Channel.insertAsync(name);
        }
        
        public void update(int id, string name) {
            base.Channel.update(id, name);
        }
        
        public System.Threading.Tasks.Task updateAsync(int id, string name) {
            return base.Channel.updateAsync(id, name);
        }
        
        public void delete(int id) {
            base.Channel.delete(id);
        }
        
        public System.Threading.Tasks.Task deleteAsync(int id) {
            return base.Channel.deleteAsync(id);
        }
        
        public void insert_rol_user(int rol, int user) {
            base.Channel.insert_rol_user(rol, user);
        }
        
        public System.Threading.Tasks.Task insert_rol_userAsync(int rol, int user) {
            return base.Channel.insert_rol_userAsync(rol, user);
        }
        
        public void delete_rol_user(int rol, int user) {
            base.Channel.delete_rol_user(rol, user);
        }
        
        public System.Threading.Tasks.Task delete_rol_userAsync(int rol, int user) {
            return base.Channel.delete_rol_userAsync(rol, user);
        }
        
        public int get_id_rol(string rol) {
            return base.Channel.get_id_rol(rol);
        }
        
        public System.Threading.Tasks.Task<int> get_id_rolAsync(string rol) {
            return base.Channel.get_id_rolAsync(rol);
        }
        
        public void insert_Forms_rol(int rol, int form) {
            base.Channel.insert_Forms_rol(rol, form);
        }
        
        public System.Threading.Tasks.Task insert_Forms_rolAsync(int rol, int form) {
            return base.Channel.insert_Forms_rolAsync(rol, form);
        }
        
        public void delete_Forms_rol(int rol, int form) {
            base.Channel.delete_Forms_rol(rol, form);
        }
        
        public System.Threading.Tasks.Task delete_Forms_rolAsync(int rol, int form) {
            return base.Channel.delete_Forms_rolAsync(rol, form);
        }
        
        public int get_id_form(string form) {
            return base.Channel.get_id_form(form);
        }
        
        public System.Threading.Tasks.Task<int> get_id_formAsync(string form) {
            return base.Channel.get_id_formAsync(form);
        }
        
        public string[][] Login(string user, string pasword) {
            return base.Channel.Login(user, pasword);
        }
        
        public System.Threading.Tasks.Task<string[][]> LoginAsync(string user, string pasword) {
            return base.Channel.LoginAsync(user, pasword);
        }
        
        public string Forms_For_User(int ID_Rol) {
            return base.Channel.Forms_For_User(ID_Rol);
        }
        
        public System.Threading.Tasks.Task<string> Forms_For_UserAsync(int ID_Rol) {
            return base.Channel.Forms_For_UserAsync(ID_Rol);
        }
    }
}
